<?xml version="1.0"?><rss version="2.0"><channel>
<title>gopher.black</title>
<link>gopher://gopher.black/</link>
<description>Tomasino's Gopher Hole</description>
<item>
  <title>The Spam Files Central Intellegence Agency</title>
  <link>gopher://gopher.black/1/phlog/20190317-the-spam-files-central-intellegence-agency/</link>
  <pubdate>Sun, 17 Mar 2019 00:00:00 -0400</pubdate>
  <description><![CDATA[<pre>
----------------------------------------
The Spam Files - Central Intellegence Agency
March 17th, 2019
----------------------------------------

This is a really interesting new spam/blackmail attempt that I
haven't seen before. I'm not sure exactly how it expects to be
effective being that it requires the individual to sort-of admit
to distribution and storage of child pornography. Hmmm...

Well, here it is, with only the email targeted redacted.

- - - - - - - - - - - - - - - - - - - -

Case #47823596

Distribution and storage of pornographic electronic materials
involving underage children.

My name is Sharika Snell and I am a technical collection officer
working for Central Intelligence Agency.

It has come to my attention that your personal details including
your email address (<REDACTED>) are listed in case #47823596.

The following details are listed in the document's attachment:

    Your personal details,
    Home address,
    Work address,
    List of relatives and their contact information.

Case #47823596 is part of a large international operation set to
arrest more than 2000 individuals suspected of paedophilia in 27
countries.

The data which could be used to acquire your personal information:

    Your ISP web browsing history,
    DNS queries history and connection logs,
    Deep web .onion browsing and/or connection sharing,
    Online chat-room logs,
    Social media activity log.

The first arrests are scheduled for April 8, 2019.

Why am I contacting you ?

I read the documentation and I know you are a wealthy person who
may be concerned about reputation.

I am one of several people who have access to those documents and
I have enough security clearance to amend and remove your details
from this case. Here is my proposition.

Transfer exactly $10,000 USD (ten thousand dollars - about 2.5
BTC) through Bitcoin network to this special bitcoin address:

3CwcSdb9siP13NYpJ2Eck3dAfTAy3JCW1k

You can transfer funds with online bitcoin exchanges such as
Coinbase, Bitstamp or Coinmama. The deadline is March 27, 2019 (I
need few days to access and edit the files).

Upon confirming your transfer I will take care of all the files
linked to you and you can rest assured no one will bother you.

Please do not contact me. I will contact you and confirm only when
I see the valid transfer.

Regards,

Sharika Snell

Technical Collection Officer

Directorate of Science and Technology

Central Intelligence Agency
</pre>]]></description>
</item>
<item>
  <title>Tilde Tel</title>
  <link>gopher://gopher.black/1/phlog/20190302-tilde-tel/</link>
  <pubdate>Sat, 02 Mar 2019 00:00:00 -0500</pubdate>
  <description><![CDATA[<pre>
----------------------------------------
tilde.tel
March 02nd, 2019
----------------------------------------

cat (cat is excitement)
ooh, cat (cat is adventure)
oooh (glamour and glitter, babies and phones)

cat has created something truly outrageous
truly, truly, truly outrageous. 
Whoa, cat! tilde.tel's contagious (outrageous)
cat is his name, no one else is the same
cat is his name

      But we're the pubnix
      Our tilde's better
      We are the pubnix, the PUBNIX
      And we're gonna get 'em

CAT (CAT!), tilde.tel's contagious (outrageous)
cat is his name, no one else is the same
CAT IS HIS NAME!!!!

                                    ,---,  
                                 ,`--.' |  
                          ___    |   :  :  
                        ,--.'|_  '   '  ;  
                        |  | :,' |   |  |  
                        :  : ' : '   :  ;  
   ,---.     ,--.--.  .;__,'  /  |   |  '  
  /     \   /       \ |  |   |   '   :  |  
 /    / '  .--.  .-. |:__,'| :   ;   |  ;  
.    ' /    \__\/: . .  '  : |__ `---'. |  
'   ; :__   ," .--.; |  |  | '.'| `--..`;  
'   | '.'| /  /  ,.  |  ;  :    ;.--,_     
|   :    :;  :   .'   \ |  ,   / |    |`.  
 \   \  / |  ,     .-./  ---`-'  `-- -`, ; 
  `----'   `--`---'                '---`"

cat's tilde.tel
    gopher://tilde.tel/1/
sing-a-long
    http://www.youtube.com/watch?v=DiXN5_KO-Ks
</pre>]]></description>
</item>
<item>
  <title>Ada</title>
  <link>gopher://gopher.black/1/phlog/20190302-ada/</link>
  <pubdate>Sat, 02 Mar 2019 00:00:00 -0500</pubdate>
  <description><![CDATA[<pre>
----------------------------------------
ada
March 02nd, 2019
----------------------------------------

I must be 30% magpie or something because I can't steer clear of
shiny new things no matter how hard I try. In this case, the shiny
"new" thing isn't so new at all, but is a programming language
from 1980 (when I was born). Ada [0] is a brilliant language. It's
incredibly simple, syntactically, but also extremely powerful. It
makes conscious decisions to forgo speed and brevity in exchange
for safety and clarity. It is cautious where other languages are
bold.

Here's a "hello, world" example:

with Ada.Text_IO;
procedure Hello is
  use Ada.Text_IO;
begin
  Put_Line("Hello, World!");
end Hello;

Everything is spelled out. Every instruction ends with
a semicolon, everything is case insensitive, variables must be
declared between the "is" and "begin" of a procedure. Every
beginning has an explicit end, which is labeled. It's so
ridiculously cautious!

I told ~ben the other day that it's the Tigran Petrosian [1] of
programming languages. The whole mentality is so neat to me.

There's a lot of languages out there and I don't need to learn
this one. While it's true that I haven't kept up with any
systems-programming languages it's not really a gap in my
knowledge. It's just that I have no need of them since I don't do
that type of work. So why learn something that's best suited to
massive government builds? Cause FUCK YOU, I wanna!

Look forward to seeing a bunch of shell work done in Ada in the
near future. I was going to make Cosmic Voyage's web generation
script in python instead of continuing to grow the massive /bin/sh
script, but maybe I'll tackle it in Ada instead.

Has anyone out there ever used it for web programming before? That
tickles me pink!

Anywho, any of you know and use Ada? I learned the basics in
college but have never done anything worth a damn in it. I found
a bunch of resources online including a standards site with the
most Orwellian name ever: Ada Conformity Assessment Authority [2].
Hah! So badass. They're serious about following conventions with
it, which really makes sense for the applications it serves. PEP8
is similar for python. If you feel like diving in with me, here's
a link to a crash-course in the form of a ~40pg PDF [3]. I'm going
to store my practice programs and notes in a git repo [4].

Now, lets see if I can do this without cutting into my Icelandic
practice, or my writing on this phlog, or on Cosmic Voyage, or my
preparations for the upcoming move, or planning my wife's 50th
birthday party (SEEEECRET) or any of the other things that are
actually important which I should be focusing on instead.

- xoxo, magpie

[0] Ada (programming language)
    gopher://gopherpedia.com/0/Ada (programming language)
[1] Tigran Petrosian
    gopher://gopherpedia.com/0/Tigran Petrosian
[2] Ada 2012 Language Reference Manual
    http://www.ada-auth.org/standards/ada12.html
[3] Ada Crash Course
    http://www.pchapin.org/VTC/TutorialAda/AdaCrash.pdf
[4] tomasino's ada practice repo
    http://github.com/jamestomasino/ada-practice
</pre>]]></description>
</item>
<item>
  <title>Re Cdmnky Crazy Bugs</title>
  <link>gopher://gopher.black/1/phlog/20190219-re-cdmnky-crazy-bugs/</link>
  <pubdate>Tue, 19 Feb 2019 00:00:00 -0500</pubdate>
  <description><![CDATA[<pre>
----------------------------------------
re: cdmnky - crazy bugs
February 19th, 2019
----------------------------------------

Here's a couple techniques I've learned over the years to punch
those sassy bugs that just won't go away square in the face-hole.

1. Explain that part of the program bit by bit to someone
   unfamiliar with it. It can be someone else in your class, or on
   your team, or just someone you know. They don't need to be
   coders. Just explain to them the logic of what you're doing and
   walk them through that part out loud.

   Often this will reveal your mistake sideways. You'll probably
   catch yourself just before you say the next part out loud as
   you unconsciously see the disconnect between what you expected
   to see and what's there. It's frustrating that it works, but it
   does. 

   Don't let a full hour go by debugging a single issue without
   trying this.

2. Delete it and rewrite it.

   No, shut-up. Just do it. I don't care that it SHOULD work.
   I don't care that you're just going to type it again exactly
   like the first time. Do it. Right, effing, now.

   Does it work? Oh hells yes. Will it make you angry when it
   does? Fuck yes.

   Don't let half a day go by debugging a single issue without
   trying this.

3. Try to solve something else.

   Take a break and work on a different thing if you can. Put it
   out of your brain. Give a day to another project or subject or
   call in sick with the butt-flu. Get some distance.

   It's not as reliable a fix as the first two, but it can do the
   trick. This is great if your issues is on a side-project or
   hobby that's not under a pressing deadline. Go wind surfing, or
   try to research different types of furry sub-culture, or
   binge-watch the old MTV cartoon "Clone High" so I can make
   jokes that people will get.

Those are my big 3. Maybe some others out there have
recommendations for you as well?
</pre>]]></description>
</item>
<item>
  <title>On The Separation Of Artists From Their Art</title>
  <link>gopher://gopher.black/1/phlog/20190218-on-the-separation-of-artists-from-their-art/</link>
  <pubdate>Mon, 18 Feb 2019 00:00:00 -0500</pubdate>
  <description><![CDATA[<pre>
----------------------------------------
On the separation of artists from their art
February 18th, 2019
----------------------------------------

A stray boost on Mastodon got me thinking about the value of works
by horrible people. Do we damn the works, the art, the music, the
films once we discover something damning about the creator which?
Do you separate the art from the artist and think of each as
distinct?

I generally try for separation and I'll explain why. For me it
comes down to four things:

 - Ownership of ideas
 - Compassion
 - Outrage
 - Pragmatism

The most complex idea floating around in my head has to do with
the idea of ownership of artistic works. Does an artist own their
creation? While one might quickly argue in the affirmative, that
is owing to a legal point of view. Ownership has a cognitive
influence on our relationship to ideas which goes beyond the
courts and governments and fits more squarely into cultural mores
and moral frameworks. How you react to someone else's pen might
vary wildly depending on your cultural upbringing, for instance.
Where are lines drawn? How firm are they? Is there a gray area?

Lets take a specific example of a disgraced artist and his body of
work: Bill Cosby and the Cosby Show. Given the vague nature of
ownership, it's easy to attribute something of that sort here.
Bill Cosby was the star of the Cosby Show, certainly, and while he
might now own the rights to it, he was fundamental in its
creation. Great!

But there's more to it. Hundreds and thousands of other people
contributed to the show as well. Just considering actors alone,
can we really dismiss the contributions of the other co-stars?
Some of the children literally spent their own childhoods
dedicated to that art. They have equal legal ownership of the
product, and clearly as much personal investment upon creation.

There's also the ancient idea that art is created for the people.
Even our copyright law and patent protections in the US are
designed to recoup the losses of research and development of the
idea, not to form some perpetual ownership of intellectual
property. That would be ridiculous! Ideas belong to the people!

So where is the line here? Is it gray? Do we grant the ultimate
position to Cosby because his name is on it? Certainly, if we
can't attribute it to him then we can't in good conscience dismiss
the art with the artist. If it's not his, then he has no impact on
it. If we find out that Bill Cosby went to a certain high school,
should we shun it? Should we shut it down? It's irrelevant, right?

It would also be a disservice to those others who were involved.
Do we punish them? It was their art as well.

But now we're approaching my second point: compassion. Let's
assume compassion for possible other artists (who may have
suffered from the disgraced artist!) is a given. Besides that
point is the subject of the artist. This part may not be popular
with everyone, but I think it's important to keep out hope for the
forgiveness of the asshole. This is a Christian ideal and one
I can't always live up to, but I think it's important to aim for.
If an artist is disgraced along with all their works then the
message to them and to everyone is that a horrible thing can
completely define you. Any other good you might have done is wiped
away as a result. What hope is there for redemption in that? What
lesson to bother trying? I try to have compassion for the artist
here by not throwing out their good works with the bad. Let their
reputation be damned. Let them suffer prison time if appropriate,
but don't throw away the good with the bad!

And that brings me to my third idea: outrage! Why the actual fuck
would I give up something I enjoy because the creator was a dick?
Why am I punishing myself for something that asshat did? Fuck
that! The Cosby Show is fucking brilliant and funny as hell. It's
still relevant and touching and a genuine joy. That selfish fucker
can go fuck-off to prison now and suffer for what he did, but he's
not taking Rudy from me.

Oh, and then there's pragmatism. I've been talking about the Cosby
Show up until now, but how about the douche-nozzle that invented
the transistor? Don't know about his brand of awful? [0] I'm not
about to give up using electronics because of some guy whose name
I don't really care to know. His ideas belong to the people. I'm
going to use stuff, watch stuff, listen to stuff, and while I may
on occasion also throw up a finger toward the heavens while doing
so, IMMA be me.

[0] William Shockley
    gopher://gopherpedia.com/0/William Shockley
</pre>]]></description>
</item>
<item>
  <title>Heavy Breathing</title>
  <link>gopher://gopher.black/1/phlog/20190130-heavy-breathing/</link>
  <pubdate>Wed, 30 Jan 2019 00:00:00 -0500</pubdate>
  <description><![CDATA[<pre>
----------------------------------------
Heavy Breathing
January 30th, 2019
----------------------------------------

I just played an impromptu mix on tilderadio.org. The theme was
"songs that breath"

Here's the playlist:

Garbage - #1 Crush
Enigma - Sadeness (Part II)
Ciara - Body Party
Julia Michaels - "Pink"
Twista ft Mariah- Carey So Lonely
Britney Spears - Breathe On Me
Lana Del Rey - Burning Desire
Britt Nicole - How We Roll (this one kinda sucked)
Charli XCX - Secret (Shh)
Björk - It's Oh So Quiet
Aaliyah - It's Whatever
Marina and the Diamonds - How to Be a Heartbreaker
Shakira - La Loba
Tinashe - All Hands on Deck
Destiny's Child - Lose My Breath
Taylor Swift - Wildest Dreams
Jessie J - Burnin' Up ft. 2 Chainz
Selena Gomez - Hands To Myself
Beyoncé - Blow
No Doubt - Hella Good
The Cure - Close to me
P!nk feat. Peaches - Oh My God
Michael Jackson - Pretty Young Thing
Enigma - Sadeness: Part i
</pre>]]></description>
</item>
<item>
  <title>Nerds In Time</title>
  <link>gopher://gopher.black/1/phlog/20190129-nerds-in-time/</link>
  <pubdate>Tue, 29 Jan 2019 00:00:00 -0500</pubdate>
  <description><![CDATA[<pre>
----------------------------------------
nerds in time
January 29th, 2019
----------------------------------------

Neckbeards.

Picture them.

Now stretch your mind out and encompass the skinny, unwashed
computer geek. Look yonder at the sea of goatees. Greasy hair,
ill-fitting t-shirts. Ahh, a modern knight walks by with his
sidearm-styled phone holter.

We can all recognize the stereotype from our own experiences. The
people of tech nerdom have a look. Of course it's not universal,
but the fact that you too can picture it so easily reveals some
truth there.

This post is not about stereotyping though. Take that rant
elsewhere. This post is about... well, time.

Think back 40 years and the nerds of today are still there. You
find them wearing slightly different things, but the connection is
clear. The goatee is a beard and the hair is longer. Or maybe it's
a button-up shirt with the top button fastened. 

But what happens when we go back further? What happens 100 years
ago? What about 1000 years?

What form did this person take back then? Was there a medieval
sorcerer of "Well, Actually..."? [0] Perhaps the reason Cato [1] was
such a dick was that he was a good, old-fashioned, nerd. He knew
better than all the idiots around him.

[0] Actually...
    http://bit.ly/2RSlVwM
[1] Cato the younger
    gopher://gopherpedia.com/0/Cato the Younger

This is the crap that keeps me up past midnight.

Who's got some other nerds from history to share? 

Hic sunt neckbeardes?
</pre>]]></description>
</item>
<item>
  <title>Lxd</title>
  <link>gopher://gopher.black/1/phlog/20190128-lxd/</link>
  <pubdate>Mon, 28 Jan 2019 00:00:00 -0500</pubdate>
  <description><![CDATA[<pre>
----------------------------------------
lxd
January 28th, 2019
----------------------------------------

lxd and lxc are amazing. If you know what they are, skip this
paragraph. If not, they're sort of like Docker, but instead of
encapsulating your application, they encapsulate a system. They're
not as broad as a whole VM, and in reality they're not really
a "thing" at all. They're a collection of isolation tools built
nto Linux that makes it seem like you're running on a whole new
vm while sharing kernels and junk. Um, go read about it somewhere
else. There's some great material out there that will explain it
better than me.

The purpose if this phlog is to document my basic LXD setup. My
host system is Ubuntu 18.04 as of this article being written, but
t really doesn't matter. Most of my containers are built using
the latest stable Ubuntu, but that also doesn't really matter. My
goals are as follows:

- Be able to create and dispose of containers easily
- All containers, by default, allow me to ssh in using my keys
- I can ssh to the containers by their container name, not IP
- I can apply a 'gui' profile and make a container work with my
  native display
- I can apply a 'user' profile and make my container start with my
  dotfiles installed

Step 1: Install LXD

If it's not already installed, you can grab the snap package.


Step 2: Install ZFS

It's not necessary, but it performs better at start/stop
operations. If you install it, LXD will use it as the default.

Step 3: Configure LXD

$ sudo lxd init

Just say yes to the defaults.

Step 4: Edit the default profile

$ lxc profile edit default

  config:
    user.vendor-data: |
      #cloud-config
      package_upgrade: true
      packages:
        - build-essential
        - software-properties-common
      users:
        - name: ubuntu
          ssh-import-id: gh:jamestomasino
          shell: /bin/bash
  description: Default LXD profile
  devices:
    eth0:
      name: eth0
      nictype: bridged
      parent: lxdbr0
      type: nic
    root:
      path: /
      pool: zfs
      type: disk
  name: default
  used_by: []

The key here is the ssh-import-id to pull my keys down from
github. With that I can ssh in immediately instead of using the
lxc exec method to sudo in.

Step 5: Edit the gui profile

If you didn't install lxd via snap, you'll need to run this one liner:

$ echo "root:$UID:1" | sudo tee -a /etc/subuid /etc/subgid

  config:
    environment.DISPLAY: :0
    raw.idmap: both 1000 1000
    user.user-data: |
      #cloud-config
      runcmd:
        - 'sed -i "s/; enable-shm = yes/enable-shm = no/g" /etc/pulse/client.conf'
        - 'echo export PULSE_SERVER=unix:/tmp/.pulse-native | tee --append /home/ubuntu/.profile'
      packages:
        - x11-apps
        - mesa-utils
        - pulseaudio
  description: GUI LXD profile
  devices:
    PASocket:
      path: /tmp/.pulse-native
      source: /run/user/1000/pulse/native
      type: disk
    X0:
      path: /tmp/.X11-unix/X0
      source: /tmp/.X11-unix/X0
      type: disk
    mygpu:
      type: gpu
  name: gui
  used_by: []

This magic sauce will set up all the dependencies needed to
connect to my display when a gui app is run. I then SSH in with
export x11 enabled and all is well.

Step 6: Edit a user profile

This one involves a lot of runcmd: stuff in a row that points to
my dotfiles, installs other apt packages, does a little dance, and
ends up with a working environment for me to do some damage. I'll
spare you all.

Step 7: SSH

I want to be able to connect to lxd containers by name, not just
IP address. I'm going to set that bit up in a minute using dnsmasq
and systemd, but first lets look at my ~/.ssh/config to see what
goodness lies within:

Host *.lxd
StrictHostKeyChecking no
UserKnownHostsFile /dev/null
LogLevel QUIET
ForwardX11 yes
ForwardX11Trusted yes
User ubuntu
IdentityFile ~/some/really/cool/path/to/SECRETS

The host checking and host file bit, along with LogLevel mean you
won't get man-in-the-middle warnings if your container IP changes
one day from starting and stoping repeatedly. X11 forwarding there
for display. I use ubuntu containers, so I've attached the
username there as well.

Step 8: DNS

$ sudo vim /usr/local/bin/lxdhostdns_start.sh

  #!/bin/sh

  LXDINTERFACE=lxdbr0
  LXDDOMAIN=lxd
  LXDDNSIP=$(ip addr show lxdbr0 | grep -Po 'inet \K[\d.]+')

  /usr/bin/systemd-resolve --interface ${LXDINTERFACE} \
                           --set-dns "${LXDDNSIP}" \
                           --set-domain ${LXDDOMAIN}


$ sudo vim /usr/local/bin/lxdhostdns_stop.sh

  #!/bin/sh

  LXDINTERFACE=lxdbr0

  /usr/bin/systemd-resolve --interface ${LXDINTERFACE} --revert


$ sudo vim /lib/systemd/system/lxd-host-dns.service

  [Unit]
  Description=LXD host DNS service
  After=multi-user.target

  [Service]
  Type=simple
  ExecStart=/usr/local/bin/lxdhostdns_start.sh
  RemainAfterExit=true
  ExecStop=/usr/local/bin/lxdhostdns_stop.sh
  StandardOutput=journal

  [Install]
  WantedBy=multi-user.target

$ sudo systemctl daemon-reload
$ sudo systemctl enable lxd-host-dns.service
$ sudo systemctl start lxd-host-dns.service

Boom. If you didn't answer defaults on lxd init, then your
nterface might not be lxdbr0 and you'll need to change stuff.

Step 9: Test it out

$ lxc launch ubuntu: test
$ lxc list # wait until you can see the IP to know it's ready
$ ssh test.lxd

If everything blew up it's because you're with me and that DNS
hackery works great to be able to ssh in, but it also breaks the
ability for your container to connect to anything else. For now
I'm disabling the DNS bit and sshing in via IP, or using the lxc
exec sudo stuff to connect. I'm watching this post [0] for
a comment response that will hopefully clarify that last bit.

[0] How to use lxd container hostnames on the host in Ubuntu 18.04
    http://blog.simos.info/how-to-use-lxd-container-hostnames-on-the-host-in-ubuntu-18-04/
</pre>]]></description>
</item>
<item>
  <title>Free Speech</title>
  <link>gopher://gopher.black/1/phlog/20190121-free-speech/</link>
  <pubdate>Mon, 21 Jan 2019 00:00:00 -0500</pubdate>
  <description><![CDATA[<pre>
----------------------------------------
free speech
January 21st, 2019
----------------------------------------

solderpunk, visiblink and yargo have a great thread going on the
topic of discrimination. Here's the most recent link to it, but
there's a history you can dig through [0].

[0] visiblink - Of nature, nurture, and dinosaurs
    gopher://zaibatsu.circumlunar.space/0/~visiblink/phlog/20190120

In visiblink's first post on the topic the discussion began with
a comedian who repeatedly ridiculed a disabled child and a human
rights tribunal that then fined him for it. That's where I'd like
to focus my very narrow band of thought on the topic.

While the discussion that spawned has been interesting it has been
focused on what constitutes an appropriate topic of criticism. Is
it based on whether that factor is in full control of the
individual, is it related to their culture or wealth, and does
that play a factor in what is appropriate. Great stuff... go read.

The part that stuck out to me was the concept of free speech and
protected speech, their terminology, and the psychology involved
in each. Yargo, in a simplistic and unfair summary to him, stated
that he'd prefer to say whatever he likes without fear of legal
consequences. That's a great place to start.

There is some psychological system at play which places the idea
of protection on the individuals who are criticized, or who are
the subject of hate speech. Media discussions surround the idea of
sensitivity and others refer to "snowflakes". Protection is
demanded by the sensitive, or so it seems.

We know in reality that it is the speech which is the subject to
protection instead. It is not the targets of the speech, but the
speaker who needs focus here, right?

The distinction is minor because the relationship between the
speaker and target haven't changed. But that's not the whole
story, is it? If we use terms like "free speech" it hides part of
the story. When we say "protected speech" now we get at the crux.
Protected by whom, and from whom?

There are other parties involved: the speaker, the subject, and
the protective entity and the persecutive entity. So when we look
back at the discussion of protected speech now we can fit everyone
into context:

A speaker's (subject) speech toward someone (object) is
potentially protected (protector) from persecution (persecutor).

Who is the persecutor? In the case of the United States and the
1st amendment from which most of this discussion flows for
Americans it is the US government itself.

Who is the protector? Well, again in this case, the US government.

  Congress shall make no law respecting an establishment of
  religion, or prohibiting the free exercise thereof; or abridging
  the freedom of speech, or of the press; or the right of the
  people peaceably to assemble, and to petition the Government for
  a redress of grievances.

Congress is limited in their powers by the Constitution from
abridging the freedom of speech.

Done, right? libertarians have at it. Except, no. Oliver Wendell
Holmes comes knocking next...

In the landmark case of Schenck v. United States, Holmes stated, 

  The most stringent protection of free speech would not protect a
  man in falsely shouting fire in a theater and causing a panic

Okay, so all speech is does not warrant protection under the first
amendment. Where do we draw the line? Here we get into Public
Forum Regulation, Prior Restraint, Expressive Conduct, Defamation,
and so on. Most appropriate to our discussion is the topic of
defamation, and inciting, provocative, or offensive speech. 

Here we go to the courts to decide where the line should be. Did
that speech represent an individual freedom, or did it put at risk
the lives and liberty of others, such as by listing the home
addresses of families of abortion doctors? The line gets blurry,
right? We're not talking about feelings being hurt anymore. Our 
objects of discussion potentially got much more serious.

Back to my focus: the protector and persecutor are the same
entity, though perhaps different departments of it. That entity
is given the power to determine what it protects from itself.
That's pretty weird when you word it like that, but so be it.
What stands out though is that the justification for NOT
protecting speech is required based on the wording of the
constitution. The US government, at least, needs to justify a
decision to step in and persecute a speaker (at least to itself).

Where was I going with this? I don't remember. I tried writing
this at work and got interrupted every five minutes. I think I was
getting to something about the psychology of speech protection,
asking an outside entity to come in and protect you from itself in
some cases and not others. There was going to be a really cool
reference to 80s sitcoms in there too.

Meh, now I'm hungry and totally forgot where I was going. So, um,
thanks for sticking with me through the first half of a well
thought-out argument. Marsha will validate your parking on your
way out.

Cheers!
</pre>]]></description>
</item>
<item>
  <title>Gophernicus Tls Howto</title>
  <link>gopher://gopher.black/1/phlog/20190120-gophernicus-tls-howto/</link>
  <pubdate>Sun, 20 Jan 2019 00:00:00 -0500</pubdate>
  <description><![CDATA[<pre>
----------------------------------------
gophernicus TLS howto
January 20th, 2019
----------------------------------------

A few people on mastodon requested a little guide on how to set up
stunnel4 with gophernicus to offer TLS. As you might know from my
earlier posts on gopher.black, I prefer to run this gopher server
as a tor service instead of using the TLS approach alone since it
does all the same things plus some extra goodies and doesn't
require modification to your gopher clients. Regardless, gopher
over TLS is cool in its own right (and I use it on cosmic.voyage).

Here's how:

1) Make sure you're using gophernicus and it's Kim's Prison
   Edition, not one of the ancient ones that shows up when you
   google gophernicus, like prologic's

2) Have an SSL cert. I use letsencrypt because why pay for
   something that's free?

3) Have stunnel4. I think it was an apt install for me.

Actually configuring everything is just a matter of tweaking
2 files:

1) /etc/default/gophernicus

OPTIONS="-o UTF-8 -nt -nh -nf -T 7070"

The important part for TLS is the last bit (-T PORT). The other
switches hide the /stats page which is a security issue, and get
rid of titles and footer and stuff, which make for a cleaner
rendered gophermap. They're cool settings, but not necessary for
TLS.

2) /etc/stunnel/gophernicus.conf

;
; Gophernicus behind Stunnel4 for gopher over TLS
;

; User/group for stunnel daemon
setuid = stunnel4
setgid = stunnel4

; PID file location
pid = /var/run/stunnel4/gophernicus.pid

; Log to file, not syslog
output = /var/log/stunnel4/gophernicus.log
syslog = no

; Certificate in pem format is needed for TLS
cert = /etc/letsencrypt/live/cosmic.voyage/fullchain.pem
key = /etc/letsencrypt/live/cosmic.voyage/privkey.pem

; Enable TCP wrappers
libwrap = yes
service = in.gophernicus-tls

; Gopher over TLS service
[gophernicus]
accept  = :::7070
connect = 127.0.0.1:70
protocol = proxy


So I'm pointing at my letsencrypt cert for cosmic in this file,
and I've chosen to use port 7070 for TLS. Kensanata says there's
an argument for port 7443 that was given on the gopher mailing
list, but I never read it. Use what makes sense to you, but make
sure it matches what you have in /etc/default/gophernicus.

And that's it. Oh, I guess you'll need to open up your port with
your firewall, but everything else should just work(TM).

Good luck!
</pre>]]></description>
</item>
</channel>
</rss>
